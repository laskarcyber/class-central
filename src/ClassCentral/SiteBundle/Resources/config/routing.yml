ClassCentralSiteBundle_homepage:
    pattern:  /
    defaults: { _controller: ClassCentralSiteBundle:Default:index }

ClassCentralSiteBundle_faq:
    pattern:  /faq
    defaults: { _controller: ClassCentralSiteBundle:Default:faq }

ClassCentralSiteBundle_privacy:
    pattern:  /privacy-policy
    defaults: { _controller: ClassCentralSiteBundle:Default:privacyPolicy }


ClassCentralSiteBundle_courses:
    pattern:  /courses/{type}
    defaults: { _controller: ClassCentralSiteBundle:Default:courses }

ClassCentralSiteBundle_initiative_novoed:
    pattern:  /initiative/vlab
    defaults:
          _controller: FrameworkBundle:Redirect:redirect
          route: ClassCentralSiteBundle_initiative
          permanent: true # this is for 301
          type: novoed

ClassCentralSiteBundle_initiative:
  pattern: /provider/{type}
  defaults: { _controller: ClassCentralSiteBundle:Initiative:provider }

ClassCentralSiteBundle_initiative_redirect:
  pattern: /initiative/{type}
  defaults:
    _controller: FrameworkBundle:Redirect:redirect
    route: ClassCentralSiteBundle_initiative
    permanent: true

ClassCentralSiteBundle_university:
    pattern:  /university/{slug}
    defaults: { _controller: ClassCentralSiteBundle:Institution:view }    

ClassCentralSiteBundle_institution:
    pattern:  /institution/{slug}
    defaults: { _controller: ClassCentralSiteBundle:Institution:view }

tag_courses:
  pattern: /tag/{tag}
  defaults: { _controller: ClassCentralSiteBundle:Course:tag }
# redirect /stream to /subject
ClassCentralSiteBundle_stream_redirect:
    pattern:  /stream/{slug}
    defaults:
      _controller: FrameworkBundle:Redirect:redirect
      route: ClassCentralSiteBundle_stream
      permanent: true # this is for 301

ClassCentralSiteBundle_stream:
    pattern:  /subject/{slug}
    defaults: { _controller: ClassCentralSiteBundle:Stream:view }  
        
ClassCentralSiteBundle_search:
  pattern: /search
  defaults: { _controller: ClassCentralSiteBundle:Search:index}

ClassCentralSiteBundle_mooc_share:
  pattern: /mooc/{id}/share
  defaults: { _controller: ClassCentralSiteBundle:Course:share}

ClassCentralSiteBundle_mooc:
  pattern: /mooc/{id}/{slug}
  defaults: { _controller: ClassCentralSiteBundle:Course:mooc}

ClassCentralSiteBundle_news:
  pattern: /news
  defaults: {_controller: ClassCentralSiteBundle:News:home}
  
ClassCentralSiteBundle_admin:
    resource: "@ClassCentralSiteBundle/Resources/config/routing_admin.yml"
    prefix: /admin    

subjects:
   pattern: /subjects
   defaults: { _controller: ClassCentralSiteBundle:Stream:subjects}

languages:
   pattern: /languages
   defaults: { _controller: ClassCentralSiteBundle:Language:languages}

lang:
    pattern:  /language/{slug}
    defaults: { _controller: ClassCentralSiteBundle:Language:view }
login:
  pattern: /login
  defaults: {_controller: ClassCentralSiteBundle:Login:login }
  schemes:  [https]

login_check:
  pattern: /login_check
  schemes:  [https]

logout:
  path: /logout
  schemes:  [https]

signup:
  pattern: /signup
  defaults: {_controller: ClassCentralSiteBundle:User:signup }
  schemes:  [https]

signup_mooc:
  pattern: /signup/mooc/{courseId}
  defaults: {_controller: ClassCentralSiteBundle:User:signupMooc }
  schemes:  [https]

signup_search_term:
  pattern: /signup/q/{searchTerm}
  defaults: {_controller: ClassCentralSiteBundle:User:signupSearchTerm }
  schemes:  [https]


signup_create_user:
  pattern: /create_user
  defaults: {_controller: ClassCentralSiteBundle:User:createUser}
  methods: [POST]

forgotpassword:
  pattern: /forgotpassword
  defaults: {_controller: ClassCentralSiteBundle:User:forgotPassword}

forgotpassword_sendemail:
  pattern: /forgotpasswordSendEmail
  defaults: {_controller: ClassCentralSiteBundle:User:forgotPasswordSendEmail}
  methods: [POST]

resetPassword:
  pattern: /resetPassword/{token}
  defaults: {_controller: ClassCentralSiteBundle:User:resetPassword }

resetPassword_save:
  pattern: /resetPassword
  defaults: {_controller: ClassCentralSiteBundle:User:resetPasswordSave }
  methods: [POST]

email_verify:
  pattern: /verify/{token}
  defaults: {_controller: ClassCentralSiteBundle:User:verifyEmail}

#mooc tracker
mooctracker:
  pattern: /mooc-tracker
  defaults:
            _controller: FrameworkBundle:Redirect:redirect
            route: user_library
            permanent: true # this is for 301

mooctracker_signup:
  pattern: /mooc-tracker-signup
  defaults:
              _controller: FrameworkBundle:Redirect:redirect
              route: signup
              permanent: true # this is for 301

mooctracker_add_search_term:
  pattern: /user/tracker/searchTerm/{searchTerm}
  defaults: {_controller: ClassCentralSiteBundle:User:addSearchTermToMOOCTracker }

#newsletter
newsletter_subscribe:
  pattern: /newsletters/subscribe/{code}
  defaults: {_controller: ClassCentralSiteBundle:Newsletter:subscribe}

newsletter_subscribe_to:
  pattern: /newsletters/subscribeTo/{code}
  defaults: {_controller: ClassCentralSiteBundle:Newsletter:subscribeTo}

newsletter_subscribed:
  pattern: /newsletters/subscribed/
  defaults: {_controller: ClassCentralSiteBundle:Newsletter:subscribed}
newsletter_mooc_tracker_signup:
  pattern: /newsletters/mooc-tracker-save-user
  defaults: {_controller: ClassCentralSiteBundle:Newsletter:moocTrackerSignup}

#user course routes
ajax_user_course_add:
  pattern: /ajax/user/course/add
  defaults: {_controller: ClassCentralSiteBundle:User:addCourse}

ajax_user_course_remove:
  pattern: /ajax/user/course/remove
  defaults: {_controller: ClassCentralSiteBundle:User:removeCourse}

ajax_user_newsletter_subscribe:
  pattern: /ajax/newsletter/subscribe/{code}
  defaults: {_controller: ClassCentralSiteBundle:User:subscribeNewsletter}

ajax_user_newsletter_add:
  pattern: /ajax/newsletter/unsubscribe/{code}
  defaults: {_controller: ClassCentralSiteBundle:User:unsubscribeNewsletter}

ajax_user_preference:
  pattern: /ajax/user/pref/{prefId}/{value}
  defaults: {_controller: ClassCentralSiteBundle:User:updateUserPreference}

ajax_user_loggedin:
  pattern : /ajax/isLoggedIn
  defaults: {_controller: ClassCentralSiteBundle:User:isLoggedIn}

user_library:
  pattern: /user/courses
  defaults: {_controller: ClassCentralSiteBundle:User:library }

signup_add_to_library:
  pattern: /signup/cc/{courseId}/{listId}
  defaults: {_controller: ClassCentralSiteBundle:User:signUpAddToLibrary }
  schemes:  [https]

user_preferences:
  pattern: /user/preferences
  defaults: {_controller: ClassCentralSiteBundle:User:preferences}

# review routes
review_new:
  pattern: /review/new/{courseId}
  defaults: {_controller: ClassCentralSiteBundle:Review:new}

review_edit:
  pattern: /user/review/edit/{reviewId}
  defaults: {_controller: ClassCentralSiteBundle:Review:edit}

review_create:
  pattern: /user/review/create/{courseId}
  defaults: {_controller: ClassCentralSiteBundle:Review:create}

# saves the review in the session
review_save:
  pattern: /review/save/{courseId}
  defaults: {_controller: ClassCentralSiteBundle:Review:save}

user_reviews:
  pattern: /user/reviews
  defaults: {_controller: ClassCentralSiteBundle:Review:myReviews}
signup_create_review:
  pattern: /signup/review/{courseId}
  defaults: {_controller: ClassCentralSiteBundle:User:signUpCreateReview }
  schemes:  [https]

ajax_review_feedback:
  pattern: /ajax/review/feedback/{reviewId}/{feedback}
  defaults: {_controller: ClassCentralSiteBundle:Review:feedback }

fb_authorize_start:
  pattern: /facebook/oauth/start
  defaults: {_controller: ClassCentralSiteBundle:Login:redirectToAuthorization }

fb_authorize_redirect:
  pattern: /facebook/oauth/authorize
  defaults: {_controller: ClassCentralSiteBundle:Login:fbReceiveAuthorizationCode }
